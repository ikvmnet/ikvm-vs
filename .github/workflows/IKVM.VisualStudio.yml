name: IKVM.VisualStudio

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
    - develop
  release:
    types:
    - created

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Setup .NET 9.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: 5.x
    - name: Execute GitVersion
      uses: gittools/actions/gitversion/execute@v3
      with:
        useConfigFile: true
    - name: Add NuGet Source (GitHub)
      shell: pwsh
      run: dotnet nuget add source --username USERNAME --password $env:GITHUB_TOKEN --store-password-in-clear-text --name ikvm $env:GITHUB_REPOS
      env:
        GITHUB_REPOS: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: NuGet Restore
      run: dotnet restore -v:diag -bl IKVM.VisualStudio.sln
    - name: Build
      shell: pwsh
      run: |
        dotnet msbuild /m /bl `
          /p:Configuration="Release" `
          /p:Platform="Any CPU" `
          /p:PreReleaseLabel="$env:GitVersion_PreReleaseLabel" `
          /p:PreReleaseNumber="$env:GitVersion_WeightedPreReleaseNumber" `
          /p:Version="$env:GitVersion_FullSemVer" `
          /p:AssemblyVersion="$env:GitVersion_AssemblySemVer" `
          /p:InformationalVersion="$env:GitVersion_InformationalVersion" `
          /p:FileVersion="$env:GitVersion_AssemblySemFileVer" `
          /p:PackageVersion="$env:GitVersion_FullSemVer" `
          /p:RepositoryUrl="$env:GITHUB_SERVER_URL/$env:GITHUB_REPOSITORY.git" `
          /p:PackageProjectUrl="$env:GITHUB_SERVER_URL/$env:GITHUB_REPOSITORY" `
          /p:BuildInParallel=true `
          /p:ContinuousIntegrationBuild=true `
          IKVM.VisualStudio.dist.msbuildproj
    - name: Upload MSBuild Log
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: msbuild.binlog
        path: msbuild.binlog
    - name: Package Tests
      run: tar czvf tests.tar.gz tests
      working-directory: dist
    - name: Upload Tests
      uses: actions/upload-artifact@v4
      with:
        name: tests
        path: dist/tests.tar.gz
    - name: Upload VSIX
      uses: actions/upload-artifact@v4
      with:
        name: vsix
        path: dist/vsix
  release:
    name: Release
    if: github.event_name != 'pull_request'
    needs:
    - build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: 5.x
    - name: Execute GitVersion
      id: GitVersion
      uses: gittools/actions/gitversion/execute@v3
      with:
        useConfigFile: true
    - name: Restore VSIX
      uses: actions/download-artifact@v4
      with:
        name: vsix
        path: dist/vsix
    - name: Create Release
      if: github.ref_type == 'tag'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.GitVersion.outputs.semVer }}
        allowUpdates: true
        omitBodyDuringUpdate: true
        artifacts: dist/vsix/*.vsix
        makeLatest: true
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish to Visual Studio Marketplace
      if: github.ref_type == 'tag'
      uses: CalvinAllen/action-vs-marketplace-publish@v1
      with:
        marketplace-pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
        publish-manifest-path: dist/vsix/IKVM.VisualStudio.manifest.json
        vsix-path: dist/vsix/IKVM.VisualStudio.vsix
